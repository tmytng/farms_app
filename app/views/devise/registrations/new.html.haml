.contents
  = render "layouts/global-navigation"
  .main
    .user-field.container
      .sub-msg
        新規ユーザー登録
      .user-new-form
        = form_with model: @user, url: user_registration_path, id: 'new_user', class: 'new_user form-field needs-validation', html: { novalidate: true }, local: true do |f|
          -# %h3.text-muted.my-2 ユーザー情報
          .form-group
            = f.label :name, "ユーザー名", class: "label-text"
            %span.require 必須
            = f.text_field :name, class: "form-control form-control-sm", required: "#{'required'}"
            %p.invalid-feedback
              ユーザー名を入力してください
          .form-group
            = f.label :avatar, "ユーザー画像"
            %span.require 必須
            = f.file_field :avatar, required: "#{'required'}"
            %p.invalid-feedback
              ユーザー画像をアップロードしてください
          .form-group
            = f.label :email, "Eメール", class: "label-text"
            %span.require 必須
            = f.email_field :email, autofocus: true, autocomplete: "email", class: "form-control form-control-sm", required: "#{'required'}"
            %p.invalid-feedback
              メールアドレスを入力してください
          .form-group
            = f.label :profile, "プロフィール", class: "label-text"
            = f.text_field :profile, class: "form-control form-control-sm"
          .form-group
            = f.label :position, "ポジション", class: "label-text"
            %span.require
            = f.text_field :position, class: "form-control form-control-sm"
          .form-group
            = f.label :password, "パスワード", class: "label-text"
            %span.require 必須
            = f.password_field :password, class: "form-control form-control-sm", required: "#{'required'}"
            %p.invalid-feedback
              パスワードを入力してください（6文字以上）
          .form-group
            = f.label :password_confirmation, "パスワードの確認", class: "label-text"
            %span.require 必須
            = f.password_field :password_confirmation, class: "form-control form-control-sm", required: "#{'required'}"
            %p.invalid-feedback
              確認用パスワードを入力してください
            .form-footer.my-4
              .form-group.form-footer__btns
                = link_to "ユーザーディレクトリへ戻る", users_path, class: "btn btn-secondary"
              .form-group.form-footer__btns
                = f.submit "登録する", class: "btn btn-primary"

%script{:crossorigin => "anonymous", :integrity => "sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj", :src => "https://code.jquery.com/jquery-3.5.1.slim.min.js"}
%script{:crossorigin => "anonymous", :integrity => "sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo", :src => "https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"}
%script{:crossorigin => "anonymous", :integrity => "sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI", :src => "https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"}

:javascript
  (function() {
    'use strict';
    window.addEventListener('load', function() {
      var forms = document.getElementsByClassName('needs-validation');
      var validation = Array.prototype.filter.call(forms, function(form) {
        form.addEventListener('submit', function(event) {
          if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    }, false);
  })();
