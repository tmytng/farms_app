= form_with(model: project, html: { class: "form-field needs-validation", novalidate: true }, local: true) do |f|
  .form-group
    = f.label :name, "プロジェクト名", class: "label-text"
    %span.require 必須
    = f.text_field :name, class: "form-control form-control-sm half-form", required: "#{'required'}"
    %p.invalid-feedback
      プロジェクト名を入力してください
  .form-group
    = f.label :profile, "プロジェクト概要", class: "label-text"
    %span.require 必須
    = f.text_area	:profile, size: "20x6", maxlength: "400", class: "form-control form-control-sm", required: "#{'required'}"
    %p.invalid-feedback
      プロジェクト概要を入力してください
  .form-group.custom-file
    = f.label :avatar, "プロジェクトイメージ"
    %br
    = f.file_field :prj_image, class: "attachment-font"
  .checkbox.check-control
    = f.label :member, "プロジェクトメンバー"
    = f.collection_check_boxes :user_ids, User.all, :id, :name, include_hidden: false
    %p.invalid-feedback
      プロジェクトメンバーを選択してください
    = f.hidden_field :creator, value: current_user.id
  .footer-menus.mt-4.mb-3
    .form-group.footer-menus__btns
      = link_to "戻る", :back, class: "backbtn btn btn-secondary mr-4"
    - if request.path_info == new_project_path
      .form-group.footer-menus__btns
        = f.submit "登録する", class: "btn btn-primary"
    - else
      .form-group.footer-menus__btns
        = f.submit "更新する", method: :patch, class: "btn btn-primary"

-# %script{:crossorigin => "anonymous", :integrity => "sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj", :src => "https://code.jquery.com/jquery-3.5.1.slim.min.js"}
-# %script{:crossorigin => "anonymous", :integrity => "sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo", :src => "https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"}
-# %script{:crossorigin => "anonymous", :integrity => "sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI", :src => "https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"}

-# :javascript
-# (function() {
-#   'use strict';
-#   window.addEventListener('load', function() {
-#     var forms = document.getElementsByClassName('needs-validation');
-#     var validation = Array.prototype.filter.call(forms, function(form) {
-#       form.addEventListener('submit', function(event) {
-#         if (form.checkValidity() === false) {
-#           event.preventDefault();
-#           event.stopPropagation();
-#         }
-#         form.classList.add('was-validated');
-#       }, false);
-#     });
-#   }, false);
-# })();
